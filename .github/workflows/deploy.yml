name: Docker Build, Push, Deploy, and Rollback

on:
  push:
    branches: [master]
  workflow_dispatch:
    inputs:
      rollback_tag:
        description: 'Rollback image tag (empty for new deploy)'
        required: false

env:
  DOCKER_REGISTRY: docker.io
  DOCKERHUB_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  REPOSITORY: ${{ secrets.DOCKER_USERNAME }}/lab-nextjs
  INSTANCE_NAME: lab-nextjs
  IMAGE_NAME: lab-nextjs

jobs:
  build-push:
    runs-on: ubuntu-latest
    outputs:
      image_tag: ${{ steps.tag.outputs.image_tag }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Snyk to check for Vulnerabilities
        uses: snyk/actions/php@master
        #uses: snyk/actions/docker@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        #with:
          #image: ${{ env.DOCKER_REGISTRY }}/${{ env.REPOSITORY }}:latest
          #args: --severity-threshold=high --fail-on=all

      - name: Docker Hub Login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Docker Setup
        uses: docker/setup-buildx-action@v2

      - name: Generate Tag
        id: tag
        run: |
          if [ "${{ github.event.inputs.rollback_tag }}" == "" ]; then
            echo "image_tag=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          else
            echo "image_tag=${{ github.event.inputs.rollback_tag }}" >> $GITHUB_OUTPUT
          fi
      - name: Build and Push
        if: ${{ github.event.inputs.rollback_tag == '' }}
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ${{ env.DOCKER_REGISTRY }}/${{ env.REPOSITORY }}:${{ steps.tag.outputs.image_tag }}
            ${{ env.DOCKER_REGISTRY }}/${{ env.REPOSITORY }}:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build-push
    steps:
      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_KEY }}" > ~/.ssh/github-actions-key
          chmod 600 ~/.ssh/github-actions-key
          ssh-keyscan -H ${{ secrets.HOST }} >> ~/.ssh/known_hosts

      - name: Deploy to Instance
        run: |
          ssh -i ~/.ssh/github-actions-key -o StrictHostKeyChecking=no \
          ${{ secrets.USERNAME }}@${{ secrets.HOST }} << 'EOF'
          docker pull ${{ env.DOCKER_REGISTRY }}/${{ env.REPOSITORY }}:${{ needs.build-push.outputs.image_tag }}
          docker stop ${{ env.INSTANCE_NAME }} &> /dev/null
          docker rm ${{ env.INSTANCE_NAME }} &> /dev/null
          docker run -d \
            --name ${{ env.INSTANCE_NAME }} \
            -p 3000:3000 \
            ${{ env.DOCKER_REGISTRY }}/${{ env.REPOSITORY }}:${{ needs.build-push.outputs.image_tag }}
          EOF

      #- name: Update Latest Tag
        #if: ${{ github.event.inputs.rollback_tag == '' }}
        #run: |
          #docker tag ${{ env.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ needs.build-push.outputs.image_tag }} \
            #${{ env.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:latest
# If deployment fails, trigger failure notification
  notify_failure:
    name: Lab NextJS Deploy Failure
    needs: deploy
    runs-on: ubuntu-latest
    if: ${{ failure() }}
    steps:
      - name: Lab NextJS Deploy Failure
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: ${{ secrets.SMTP_SERVER }}
          server_port: ${{ secrets.SMTP_PORT }}
          username: ${{ secrets.SMTP_USERNAME }}
          password: ${{ secrets.SMTP_PASSWORD }}
          subject: "❌ NextJS Deployment Failed: ${{ github.repository }}"
          body: "The deployment of ${{ github.repository }} failed. Check logs for details."
          to: ${{ secrets.EMAIL_TO }}
          from: ${{ secrets.EMAIL_FROM }}
          content_type: text/html

  # If deployment is successful, trigger success notification
  notify_success:
    name: Lab NextJS Deploy Success
    needs: deploy
    runs-on: ubuntu-latest
    if: ${{ success() }}
    steps:
      - name: Lab NextJS Deploy Success
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: ${{ secrets.SMTP_SERVER }}
          server_port: ${{ secrets.SMTP_PORT }}
          username: ${{ secrets.SMTP_USERNAME }}
          password: ${{ secrets.SMTP_PASSWORD }}
          subject: "✅ NextJS Deployment Successful: ${{ github.repository }}"
          body: "The deployment of ${{ github.repository }} was successful."
          to: ${{ secrets.EMAIL_TO }}
          from: ${{ secrets.EMAIL_FROM }}
          content_type: text/html
