name: Docker Build, Push, Deploy, and Rollback

on:
  push:
    branches: [master]
  workflow_dispatch:
    inputs:
      rollback_tag:
        description: 'Rollback image tag (empty for new deploy)'
        required: false

env:
  DOCKERHUB_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  IMAGE_NAME: lab-nextjs
  STACK_NAME: lab-nextsj-stack
  SERVICE_NAME: lab-nextsj-stack-service

jobs:
  build-push:
    runs-on: ubuntu-latest
    outputs:
      image-tag: ${{ steps.meta.outputs.tags }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Docker Hub Login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Docker Setup
        uses: docker/setup-buildx-action@v2

      - name: Generate Tag
        id: tag
        run: |
          if [ "${{ github.event.inputs.rollback_tag }}" == "" ]; then
            echo "image_tag=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          else
            echo "image_tag=${{ github.event.inputs.rollback_tag }}" >> $GITHUB_OUTPUT
          fi
      - name: Build and Push
        if: ${{ github.event.inputs.rollback_tag == '' }}
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ env.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ steps.tag.outputs.image_tag }}
            ${{ env.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build-push
    steps:
      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_KEY }}" > ~/.ssh/github-actions-key
          chmod 600 ~/.ssh/github-actions-key
          ssh-keyscan -H ${{ secrets.HOST }} >> ~/.ssh/known_hosts

      - name: Deploy to Google Cloud Compute Engine
        run: |
          ssh -i ~/.ssh/github-actions-key -o StrictHostKeyChecking=no \
          ${{ secrets.USERNAME }}@${{ secrets.HOST }} << 'EOF'

          docker rm -f ${{ env.IMAGE_NAME }} &> /dev/null

          docker rmi ${{ env.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}

          docker pull ${{ env.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ steps.tag.outputs.image_tag }}

          docker run -it -d --name ${{ env.IMAGE_NAME }} -p 3000:3000 ${{ env.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ steps.tag.outputs.image_tag }}

          EOF

      - name: Update Latest Tag
        if: ${{ github.event.inputs.rollback_tag == '' }}
        run: |
          docker tag ${{ env.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ needs.build-push.outputs.image-tag }} \
            ${{ env.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:latest
